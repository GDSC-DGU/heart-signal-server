name: Web Application Dev Server CI/CD

on:
  push:
    branches: [ "dev" ]

jobs:
  # safe tag에 대한 gradlew test && merged에 대한 gradlew build/deploy
  CI:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3
        
    ### runner application java 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    ### gradlew 실행 권한 부여
    - name: Grant execute permisstion for gradlew
      run: chmod +x gradlew

    ### project build
    - name: Build with Gradle
      run: ./gradlew clean build

    ### Docker Image Build and Push
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}

  # closed에 대한 server deploy
  CD:
    needs: [CI]
    
    runs-on: ubuntu-20.04

    steps:
    ### SSH Connect and Docker Image Pull and Container Run
    - name: Docker Image Pull and Container Run
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        # key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          docker stop signal-was
          docker rm signal-was
          docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
          docker run -d -v /root/naemansan/resources:/app/resources -p 8080:8080 --name signal-was ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}